name: Release

on:
  push:
    tags:
      - "*"
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag to build and release"
        required: true
        type: string

permissions:
  contents: write

jobs:
  build-linux-x86_64:
    name: Build Linux x86_64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          override: true
      - name: Install build tools
        run: sudo apt-get update && sudo apt-get install -y gcc-multilib
      - name: Install cbindgen
        run: cargo install cbindgen
      - name: Build release
        run: |
          make clean || true
          make release
          ls -l release/
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-linux-x86_64
          path: release/

  build-linux-arm64:
    name: Build Linux ARM64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-unknown-linux-gnu
          override: true
      - name: Install build tools
        run: sudo apt-get update && sudo apt-get install -y gcc-aarch64-linux-gnu
      - name: Set up cross-compilation
        run: rustup target add aarch64-unknown-linux-gnu
      - name: Install cbindgen
        run: cargo install cbindgen
      - name: Build release
        run: |
          make clean || true
          make release
          ls -l release/
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-linux-arm64
          path: release/

  build-macos-x86_64:
    name: Build macOS x86_64
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-apple-darwin
          override: true
      - name: Install build tools
        run: brew install cbindgen
      - name: Build release
        run: |
          make clean || true
          make release
          ls -l release/
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-macos-x86_64
          path: release/

  build-macos-arm64:
    name: Build macOS ARM64
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-apple-darwin
          override: true
      - name: Install build tools
        run: brew install cbindgen
      - name: Set up cross-compilation
        run: rustup target add aarch64-apple-darwin
      - name: Build release
        run: |
          make clean || true
          make release
          ls -l release/
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-macos-arm64
          path: release/

  publish:
    name: Publish Release
    runs-on: ubuntu-latest
    needs:
      - build-linux-x86_64
      - build-linux-arm64
      - build-macos-x86_64
      - build-macos-arm64
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-release
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.tag || github.ref_name }}
          name: Release ${{ github.event.inputs.tag || github.ref_name }}
          draft: false
          prerelease: false
      - name: Upload Release Assets
        run: |
          for dir in all-release/*; do
            zip -r "$dir.zip" "$dir"
            gh release upload "${{ github.event.inputs.tag || github.ref_name }}" "$dir.zip"
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
